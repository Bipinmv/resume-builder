{"version":3,"sources":["components/Footer.js","components/Home.js","helper/Toast.js","components/CreateResume.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Home","src","process","alt","to","Button","size","variant","ErrorToast","props","width","height","message","SuccessToast","CreateResume","handleChange","name","refName","current","value","email","refEmail","phone","refPhone","designation","refDesignation","address","refAddress","toast","error","setState","form_data","state","success","generateExpField","counter","index","experience","Form","Row","Group","as","Col","controlId","Label","Control","type","ref","refCompany","defaultValue","company","refExpDesignation","refRole","role","onClick","handleAddExp","numberOfExpFields","handleRemoveExp","prevState","period","elem","Object","keys","length","renderExperienceField","sectioncontainer","oneField","push","generateEduField","education","refInstitution","institution","refDegree","degree","refYOP","yop","handleAddEdu","numberOfEduFields","handleRemoveEdu","renderEducationField","skills","techStacks","createRef","this","multiple","id","onChange","selected","placeholder","defaultSelected","slice","options","Component","RBNavbar","Navbar","collapseOnSelect","expand","sticky","Toggle","aria-controls","Brand","Nav","Link","NavLink","Collapse","isActive","match","location","pathname","split","activeClassName","position","autoClose","hideProgressBar","transition","Slide","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","path","component","exact","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dc2f2c7.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Home.css';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"section-3\">\r\n            <div className=\"footer companies\">\r\n                <ul>\r\n                    <li>Resume builder</li>\r\n                    <li>Resume templates</li>\r\n                    <li>Resume formatting</li>\r\n                    <li>Resources</li>\r\n                    <li>Resume writing guide</li>\r\n                </ul>\r\n                <ul>\r\n                    <li>Professional resume</li>\r\n                    <li>Entry-level resume</li>\r\n                    <li>Student resume</li>\r\n                    <li>Resume writing</li>\r\n                </ul>\r\n                <ul>\r\n                    <li>Contact us</li>\r\n                    <li>Privacy policy</li>\r\n                    <li>Terms and conditions</li>\r\n                </ul>\r\n                <ul>\r\n                    <li>Media Kit</li>\r\n                    <li>Pricing</li>\r\n                    <li>About Us</li>\r\n                </ul>\r\n            </div>\r\n            <hr className=\"bg-light\"></hr>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './Home.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Footer from './Footer';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <>\r\n            <div className=\"home-container\">\r\n                <div className=\"section-1\">\r\n                    <div>\r\n                        <img src={process.env.PUBLIC_URL + '/assets/resume-image-1.jpg'} className=\"resume-image resume-image-1\" alt=\"\"></img>\r\n                        <img src={process.env.PUBLIC_URL + '/assets/resume-image-2.jpg'} className=\"resume-image resume-image-2\" alt=\"\"></img>\r\n                        <img src={process.env.PUBLIC_URL + '/assets/resume-image-3.jpg'} className=\"resume-image resume-image-3\" alt=\"\"></img>\r\n                    </div>\r\n                    <div className=\"section-1-contents\">\r\n                        <h2>Try Our Professional Resume Builder Now!</h2>\r\n                        <span>Save time with our easy 3-step resume builder. No more writer’s block or formatting difficulties in Word. Rapidly make a perfect resume employers love.</span>\r\n                        <Link to=\"/create-resume\">\r\n                            <Button size=\"lg\" variant=\"primary\" className=\"create-btn\">Create My resume</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section-2\">\r\n                    <p className=\"d-flex justify-content-center\">Where are they getting hired?</p>\r\n                    <div className=\"companies container mb-4\">\r\n                        <img src={process.env.PUBLIC_URL + '/assets/BBC-logo.png'} className=\"company-logo-1\" alt=\"\"></img>\r\n                        <img src={process.env.PUBLIC_URL + '/assets/airbnb-logo.png'} className=\"company-logo-1\" alt=\"\"></img>\r\n                        <img src={process.env.PUBLIC_URL + '/assets/apple-logo.svg'} className=\"company-logo-3\" alt=\"\"></img>\r\n                        <img src={process.env.PUBLIC_URL + '/assets/google-logo.png'} className=\"company-logo-1\" alt=\"\"></img>\r\n                        <img src={process.env.PUBLIC_URL + '/assets/tesla-logo1.png'} className=\"company-logo-5\" alt=\"\"></img>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Button size=\"lg\" variant=\"\" className=\"upgrad-btn mt-4\">Upgrad Your resume</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport function ErrorToast(props) {\r\n    return (\r\n        <>\r\n            <div className=\"float-left\">\r\n                <img alt=\"\" src={process.env.PUBLIC_URL + \"/assets/msg_alert.svg\"} width=\"18\" height=\"18\" className=\"d-inline-block align-top mx-3\" />\r\n            </div>\r\n            <div className=\"float-left w-75\">\r\n                <span>{props.message}</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport function SuccessToast(props) {\r\n    return (\r\n        <>\r\n            <div className=\"float-left mt-1\">\r\n                <img alt=\"\" src={process.env.PUBLIC_URL + \"/assets/msg_ok.svg\"} width=\"15\" height=\"15\" className=\"d-inline-block align-top mx-3\" />\r\n            </div>\r\n            <div className=\"float-left w-75\">\r\n                <span>{props.message}</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component, createRef } from 'react'\r\nimport './CreateResume.css';\r\nimport Footer from './Footer';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { ErrorToast, SuccessToast } from '../helper/Toast';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class CreateResume extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            form_data: {\r\n                name: \"Bipin Mv\",\r\n                email: \"bipinmv23@gmail.com\",\r\n                designation: \"Associate Software Engineer\",\r\n                phone: \"9895051128\",\r\n                address: \"Kannur, Kerala\",\r\n                skills: [],\r\n            },\r\n            experience: [\r\n                {\r\n                    company: \"Caparizon\",\r\n                    designation: \"Associate Software Engineer\",\r\n                    period: \"Aug-2020 present\",\r\n                    role: \"Full Stack Developer(React and Node)\"\r\n                }\r\n            ],\r\n            education: [\r\n                {\r\n                    institution: \"Bharathiar University\",\r\n                    degree: \"MCA\",\r\n                    yop: \"2020\"\r\n                }\r\n            ]\r\n        };\r\n        this.numberOfExpFields = 0;\r\n        this.numberOfEduFields = 0;\r\n        this.techStacks = ['JavaScript', 'React', 'Python', 'Node', 'Django', 'CSS']\r\n        this.refName = createRef();\r\n        this.refEmail = createRef();\r\n        this.refPhone = createRef();\r\n        this.refDesignation = createRef();\r\n        this.refAddress = createRef();\r\n        this.refCompany = createRef();\r\n        this.refExpDesignation = createRef();\r\n        this.refRole = createRef();\r\n        this.refInstitution = createRef();\r\n        this.refDegree = createRef();\r\n        this.refYOP = createRef();\r\n    }\r\n\r\n    handleChange = () => {\r\n\r\n        let name = this.refName.current.value;\r\n        let email = this.refEmail.current.value;\r\n        let phone = this.refPhone.current.value;\r\n        let designation = this.refDesignation.current.value;\r\n        let address = this.refAddress.current.value;\r\n        if (name === \"\" || name === null) {\r\n            toast.error(<ErrorToast message=\"Please Enter Name\" />);\r\n        }\r\n        else if (email === \"\" || email === null) {\r\n            toast.error(<ErrorToast message=\"Please Enter Email\" />);\r\n        }\r\n        else if (phone === \"\" || phone === null) {\r\n            toast.error(<ErrorToast message=\"Please Enter Phone\" />);\r\n        }\r\n        else if (designation === \"\" || designation === null) {\r\n            toast.error(<ErrorToast message=\"Please Enter Designation\" />);\r\n        }\r\n        else if (address === \"\" || address === null) {\r\n            toast.error(<ErrorToast message=\"Please Enter Address\" />);\r\n        }\r\n        else {\r\n            this.setState({\r\n                form_data: {\r\n                    ...this.state.form_data,\r\n                    [this.refName.current.name]: name,\r\n                    [this.refEmail.current.name]: email,\r\n                    [this.refPhone.current.name]: phone,\r\n                    [this.refDesignation.current.name]: designation,\r\n                    [this.refAddress.current.name]: address,\r\n                }\r\n            });\r\n            toast.success(<SuccessToast message=\"Saved Successfully\" />);\r\n        }\r\n    };\r\n\r\n    generateExpField = (counter) => {\r\n        let index = counter;\r\n        if (this.state.experience[index]) {\r\n            return (\r\n                <div key={index}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridCompany\">\r\n                            <Form.Label>Company</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                ref={this.refCompany}\r\n                                name=\"company\"\r\n                                defaultValue={this.state.experience[index].company} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGrid\">\r\n                            <Form.Label>Designation</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                ref={this.refExpDesignation}\r\n                                name=\"designation\"\r\n                                defaultValue={this.state.experience[index].designation} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridRole\">\r\n                            <Form.Label>Role</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                ref={this.refRole}\r\n                                name=\"role\"\r\n                                defaultValue={this.state.experience[index].role} />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Button variant=\"dark\" size=\"sm\" onClick={this.handleAddExp}> {\"+\"} </Button>\r\n                    {this.numberOfExpFields >= 1 &&\r\n                        <Button variant=\"dark\" size=\"sm\" onClick={() => this.handleRemoveExp(index)} className=\"ml-2\"> {\"x\"} </Button>\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    handleAddExp = () => {\r\n        this.numberOfExpFields++;\r\n        this.setState(prevState => ({\r\n            experience: {\r\n                ...prevState.experience,\r\n                [this.numberOfExpFields]: { company: \"\", designation: \"\", period: \"\", role: \"\" }\r\n            }\r\n        }));\r\n    };\r\n\r\n    handleRemoveExp = index => {\r\n        this.numberOfExpFields--;\r\n        let elem = this.state.experience;\r\n        if (Object.keys(elem).length >= 0) {\r\n            delete elem[index];\r\n            this.setState({\r\n                experience: {\r\n                    ...elem\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    renderExperienceField = () => {\r\n        let counter = 0;\r\n        let sectioncontainer = [];\r\n        while (counter <= this.numberOfExpFields) {\r\n            let oneField = this.generateExpField(counter);\r\n            sectioncontainer.push(oneField);\r\n            counter++;\r\n        }\r\n        return sectioncontainer;\r\n    };\r\n\r\n    generateEduField = (counter) => {\r\n        let index = counter;\r\n        if (this.state.education[index]) {\r\n            return (\r\n                <div key={index}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridInstitution\">\r\n                            <Form.Label>Institution</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                ref={this.refInstitution}\r\n                                name=\"institution\"\r\n                                defaultValue={this.state.education[index].institution} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGrid\">\r\n                            <Form.Label>Degree</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                ref={this.refDegree}\r\n                                name=\"degree\"\r\n                                defaultValue={this.state.education[index].degree} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridYOP\">\r\n                            <Form.Label>Year of Passing</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                ref={this.refYOP}\r\n                                name=\"yop\"\r\n                                defaultValue={this.state.education[index].yop} />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Button variant=\"dark\" size=\"sm\" onClick={this.handleAddEdu}> {\"+\"} </Button>\r\n                    {this.numberOfEduFields >= 1 &&\r\n                        <Button variant=\"dark\" size=\"sm\" onClick={() => this.handleRemoveEdu(index)} className=\"ml-2\"> {\"x\"} </Button>\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n    handleAddEdu = () => {\r\n        this.numberOfEduFields++;\r\n        this.setState(prevState => ({\r\n            education: {\r\n                ...prevState.education,\r\n                [this.numberOfEduFields]: { institution: \"\", degree: \"\", yop: \"\" }\r\n            }\r\n        }));\r\n    };\r\n\r\n    handleRemoveEdu = index => {\r\n        this.numberOfEduFields--;\r\n        let elem = this.state.education;\r\n        if (Object.keys(elem).length >= 0) {\r\n            delete elem[index];\r\n            this.setState({\r\n                education: {\r\n                    ...elem\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    renderEducationField = () => {\r\n        let counter = 0;\r\n        let sectioncontainer = [];\r\n        while (counter <= this.numberOfEduFields) {\r\n            let oneField = this.generateEduField(counter);\r\n            sectioncontainer.push(oneField);\r\n            counter++;\r\n        }\r\n        return sectioncontainer;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"container form-container\">\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridName\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control type=\"text\"\r\n                                    ref={this.refName}\r\n                                    name=\"name\"\r\n                                    defaultValue={this.state.form_data.name} />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\"\r\n                                    ref={this.refEmail}\r\n                                    name=\"email\"\r\n                                    defaultValue={this.state.form_data.email} />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridDesignation\">\r\n                                <Form.Label>Designation</Form.Label>\r\n                                <Form.Control type=\"text\"\r\n                                    ref={this.refDesignation}\r\n                                    name=\"designation\"\r\n                                    defaultValue={this.state.form_data.designation} />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridPhone\">\r\n                                <Form.Label>Phone</Form.Label>\r\n                                <Form.Control type=\"number\"\r\n                                    ref={this.refPhone}\r\n                                    name=\"phone\"\r\n                                    defaultValue={this.state.form_data.phone} />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Group controlId=\"formGridAddress\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control as=\"textarea\"\r\n                                ref={this.refAddress}\r\n                                name=\"address\"\r\n                                defaultValue={this.state.form_data.address} />\r\n                        </Form.Group>\r\n\r\n                        <h5 className=\"mb-4\">Experience</h5>\r\n                        {this.renderExperienceField()}\r\n\r\n                        <Form.Group controlId=\"formGridSkills\" className=\"my-3\">\r\n                            <Form.Label>Skills</Form.Label>\r\n                            <Typeahead multiple className=\"mt-1\" id=\"skillID\"\r\n                                onChange={(selected) => {\r\n                                    this.setState({\r\n                                        form_data: {\r\n                                            ...this.state.form_data,\r\n                                            skills: selected\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                placeholder=\"Select your skill\"\r\n                                defaultSelected={this.techStacks.slice(0, 2)}\r\n                                options={this.techStacks}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <h5 className=\"mb-4 mt-3\">Education</h5>\r\n                        {this.renderEducationField()}\r\n\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button onClick={this.handleChange} size=\"md\" variant=\"\" className=\"upgrad-btn text-light\">Submit</Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <Footer />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Navbar, Nav, Button } from 'react-bootstrap';\r\nimport { Route, NavLink, Switch } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport Home from './Home';\r\nimport CreateResume from './CreateResume';\r\nimport { ToastContainer, Slide } from 'react-toastify';\r\n\r\nexport default function RBNavbar() {\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect expand=\"lg\" variant=\"light\" sticky=\"top\" className=\"bg-light\">\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Brand >\r\n                    <Nav.Link as={NavLink} to=\"/\">\r\n                        <span className=\"brand\">Resume <strong className=\"\">Builder</strong></span>\r\n                    </Nav.Link>\r\n                </Navbar.Brand>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link>Resume Templates</Nav.Link>\r\n                        <Nav.Link>Resume Examples</Nav.Link>\r\n                        <Nav.Link>Resources</Nav.Link>\r\n                    </Nav>\r\n                    <Nav>\r\n                        <Nav.Link as={NavLink} to=\"/create-resume\" className=\"text-muted mr-4\"\r\n                            isActive={(match, location) => {\r\n                                return (location.pathname.split(\"/\")[1] === \"create-resume\");\r\n                            }}\r\n                            activeClassName=\"text-dark blue-active\">\r\n                            Create Resume\r\n\t\t\t\t\t\t</Nav.Link>\r\n                        <Nav.Link>\r\n                            <Button size=\"sm\" variant=\"outline-primary\" >Sign Up</Button>\r\n                        </Nav.Link>\r\n                        <Nav.Link>\r\n                            <Button size=\"sm\" variant=\"primary\" >Login</Button>\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                transition={Slide}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Switch>\r\n                <Route path=\"/\" component={Home} exact />\r\n                <Route path=\"/create-resume\" component={CreateResume} exact />\r\n            </Switch>\r\n        </>\r\n    )\r\n}","import { BrowserRouter } from 'react-router-dom';\r\nimport './App.css'\r\nimport RBNavbar from './components/Navbar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename=\"/resume-builder\">\r\n      <RBNavbar />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}